1. Whenever a problem is asked, come up with a very basic brute force solution first. Then you can continue thinking for more optimised solutions.

2. Ask a lot of clarifying questions. Get to a state where you have an idea of what the problem is all about & what kind of cases you may have to cover. This will pave way for your thoughts to move in the right direction to solve the problem.

3. Don't start off with coding. Tell the interviewer you wanna take 5 minutes to think through. See if your solution solves the basic test case. If it does, think of test cases that will break. Tweak/change your solution to cover them as well. Think loud and let interviewer hear all this.

4. While coding, take 2 minutes & visualize your code. Once you have a vision, start writing the code covering all complex test cases that were discussed.

5. Assign proper names to variables like index, name, height, etc rather than having like a, i, k and so on. Coding quality is a big impression.


0. If there is a problem which you have already seen don't directly jump to the solution, build it again from scratch. But if it's a trivial/standard then directly go to solution.

1. Getting interviewer into your areas of interest. Asking questions or keys so as to make interview come to your arena. It's an art I believe.

2. Being mum doesn't work. Let them know your thought process and he/she will even try to help you out in solving it.

3. Ask for feedback at the end of interview. Know of the company well enough to ask company specific ones as well

4. Don't show any attitude even if you have a killer resume and skills. No company might prefer a rigid person

5. If asked to visualise the solution, don't make it in air put it down on paper and trace the solution that you gave.

Those are my two cents on this. All the best for your next Interview (To anyone reading this) :)
